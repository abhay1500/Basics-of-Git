<Basic Commands>


Working Directory ------> Staging Area ------> Local Repository ------> Remote Repository 

1. git add 
command used to add a file that is in the working directory to the staging area.

2. git commit 
command used to add all files that are staged to the local repository.

3. git push 
command used to add all committed files in the local repository to the remote repository. So in the remote repository, all files and changes will be visible to anyone with access to the remote repository.

4. git fetch
command used to get files from the remote repository to the local repository but not into the working directory.

5. git merge
command used to get the files from the local repository into the working directory.

6. git pull
command used to get files from the remote repository directly into the working directory. It is equivalent to a git fetch and a git merge.

7. git --version
shows which Git version is installed on the system.

8. git help -a
Git has a help file that lists the most commonly used Git commands.

Create and Initialize Test Directory
mkdir [directory_name]
cd [directory_name]
git init


Clone GitHub Repository
git clone [repository_url]

Note: Click the Code button and select the HTTPS or SSH option, depending on how you want to secure your connection. For this tutorial, we will use HTTPS. Copy the URL for cloning the repository.
Note: To clone a repository using SSH, you must generate an SSH key pair on your Windows workstation and assign the public key to your GitHub account.


List Remote Repositories

cd [repository_name]
After cloning, your working directory should have a copy of the repository from GitHub. It should contain a directory with the name of the project. Move to the directory with cd

Once you are in the subdirectory, list the remote repositories with
git remote -v
shows a list of remote repositories associated with your local repository and their corresponding URLs.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

******Basic Snapshotting******

git status	                                              -->Check status
git add [file-name.txt]	                                  -->Add a file to the staging area
git add -A	                                              -->Add all new and changed files to the staging area
git commit -m "[commit message]"	                        -->Commit changes
git rm -r [file-name.txt]	                                -->Remove a file (or folder)
git remote -v	                                            -->View the remote repository of the currently working file or directory.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

*******Branching & Merging*******

git branch	                                           -->List branches (the asterisk denotes the current branch)
git branch -a	                                         -->List all branches (local and remote)
git branch [branch name]	                             -->Create a new branch
git branch -d [branch name]	                           -->Delete a branch
git branch -m [old branch name] [new branch name]	     -->Rename a local branch


git checkout -b [branch name]	                         -->Create a new branch and switch to it
git checkout [branch name]	                           -->Switch to a branch
git checkout -	                                       -->Switch to the branch last checked out
git checkout -b [branch name] origin/[branch name]	   -->Clone a remote branch and switch to it


git merge [branch name]	                               -->Merge a branch into the active branch
git merge [source branch] [target branch]	             -->Merge a branch into a target branch


git stash	                                             -->Stash changes in a dirty working directory
git stash clear	                                       -->Remove all stashed entries
git stash pop	                                         -->Apply latest stash to working directory

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

******Sharing & Updating Projects******

git push origin [branch name]	                                                          -->Push a branch to your remote repository
git push -u origin [branch name]	                                                      -->Push changes to remote repository (and remember the branch)
git push	                                                                              -->Push changes to remote repository (remembered branch)
git push origin --delete [branch name]	                                                -->Delete a remote branch

git pull	                                                                              -->Update local repository to the newest commit
git pull origin [branch name]	                                                          -->Pull changes from remote repository

git remote add origin ssh://git@github.com/[username]/[repository-name].git	            -->Add a remote repository

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

******Inspection & Comparison******

git log	                                                                                 -->View changes
git log --summary	                                                                       -->View changes (detailed)
git log --oneline	                                                                       -->View changes (briefly)
git diff [source branch] [target branch]	                                               -->Preview changes before merging
