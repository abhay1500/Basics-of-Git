<Basic Commands>


Working Directory ------> Staging Area ------> Local Repository ------> Remote Repository 

1. git add 
command used to add a file that is in the working directory to the staging area.

2. git commit 
command used to add all files that are staged to the local repository.

3. git push 
command used to add all committed files in the local repository to the remote repository. So in the remote repository, all files and changes will be visible to anyone with access to the remote repository.

4. git fetch
command used to get files from the remote repository to the local repository but not into the working directory.

5. git merge
command used to get the files from the local repository into the working directory.

6. git pull
command used to get files from the remote repository directly into the working directory. It is equivalent to a git fetch and a git merge.

7. git --version
shows which Git version is installed on the system.

8. git help -a
Git has a help file that lists the most commonly used Git commands.

Create and Initialize Test Directory
mkdir [directory_name]
cd [directory_name]
git init


Clone GitHub Repository
git clone [repository_url]

Note: Click the Code button and select the HTTPS or SSH option, depending on how you want to secure your connection. For this tutorial, we will use HTTPS. Copy the URL for cloning the repository.
Note: To clone a repository using SSH, you must generate an SSH key pair on your Windows workstation and assign the public key to your GitHub account.


List Remote Repositories

cd [repository_name]
After cloning, your working directory should have a copy of the repository from GitHub. It should contain a directory with the name of the project. Move to the directory with cd

Once you are in the subdirectory, list the remote repositories with
git remote -v
shows a list of remote repositories associated with your local repository and their corresponding URLs.


